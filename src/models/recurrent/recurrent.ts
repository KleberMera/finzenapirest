import { CreateRecurrentTransactionDto, UpdateRecurrentTransactionDto } from "./create-recurrent-transaction.dto";


export interface RecurrentTransactionService {
  /**
   * Create a new recurrent transaction
   * @param createRecurrentTransactionDto - Data to create the recurrent transaction
   * @param userId - User ID
   */
  create(createRecurrentTransactionDto: CreateRecurrentTransactionDto, userId: number): Promise<any>;

  /**
   * Create a recurrent transaction from an existing transaction
   * @param transactionId - ID of the existing transaction
   * @param recurrenceConfig - Recurrence configuration
   * @param userId - User ID
   */
  createFromExistingTransaction(
    transactionId: number, 
    recurrenceConfig: Omit<CreateRecurrentTransactionDto, 'transactionData'>,
    userId: number
  ): Promise<any>;

  /**
   * Find all recurrent transactions for a user
   * @param userId - User ID
   * @param isActive - Optional filter for active status
   */
  findAllByUser(userId: number, isActive?: boolean): Promise<any[]>;

  /**
   * Find a specific recurrent transaction
   * @param id - Recurrent transaction ID
   * @param userId - User ID
   */
  findOne(id: number, userId: number): Promise<any>;

  /**
   * Get all transactions generated by a recurrent transaction
   * @param id - Recurrent transaction ID
   * @param userId - User ID
   */
  getGeneratedTransactions(id: number, userId: number): Promise<any[]>;

  /**
   * Update a recurrent transaction
   * @param id - Recurrent transaction ID
   * @param updateRecurrentTransactionDto - Update data
   * @param userId - User ID
   */
  update(
    id: number, 
    updateRecurrentTransactionDto: UpdateRecurrentTransactionDto,
    userId: number
  ): Promise<any>;

  /**
   * Enable or disable a recurrent transaction
   * @param id - Recurrent transaction ID
   * @param isActive - Active status
   * @param userId - User ID
   */
  toggleActive(id: number, isActive: boolean, userId: number): Promise<any>;

  /**
   * Remove a recurrent transaction
   * @param id - Recurrent transaction ID
   * @param userId - User ID
   */
  remove(id: number, userId: number): Promise<any>;
}